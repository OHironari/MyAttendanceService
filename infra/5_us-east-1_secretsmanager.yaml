Parameters:
  ImportedARN:
    Type: String
    Description: Insert IAM ROLE To Assume role to lambda
  ImportedARNDB:
    Type: String
    Description: Insert IAM ROLE To access Dynamo DB
  LambdaARN:
    Type: String
    Description: Insert Lambda ARN to Access secrets manager For get s3 and dynamo access role.
  GmailClientSecrets:
    Type: String
    Description: Insert Gmail Client secrets.
  GmailLambdaARN:
    Type: String
    Description: Insert Lambda ARN to Access secrets manager For get gmail client.
  YourName:
    Type: String
    Description: Insert Your Name
  CompanyA:
    Type: String
    Description: Insert CompanyA ITxxx
  CompanyB:
    Type: String
    Description: Insert CompanyB Cxxx
  gmailaddress:
    Type: String
    Description: Insert address to send. If you want multiple address, please xxxx@xxx.com,yyyy@yyy.com;........


Resources:
  MySecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: This is the secrets manager for store my iam role arn
      Name: "my_attendance/iam_role_arn"
      SecretString: !Sub '{"s3_access_role_arn": "${ImportedARN}", "dynamo_db_access_role_arn": "${ImportedARNDB}", "UserName": "${YourName}"}'
  
  SecretResourcePolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref MySecrets
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowLambdaAccess
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: secretsmanager:GetSecretValue
            Resource: !Ref MySecrets
            Condition:
              ArnLike:
                aws:SourceArn: !Ref LambdaARN

  GmailSecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: This is the secrets manager for Gmail Secrets
      Name: "my_attendance/gmail"
      SecretString: !Sub '{"client_secret": "${GmailClientSecrets}","name": "${YourName}","CompanyA": "${CompanyA}","CompanyB": "${CompanyB}","gmailaddress": "${gmailaddress}"}'

  SecretResourcePolicyForGmailAPI:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      SecretId: !Ref GmailSecrets
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowGmailAPILambdaAccess
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: secretsmanager:GetSecretValue
            Resource: !Ref GmailSecrets
            Condition:
              ArnLike:
                aws:SourceArn: !Ref GmailLambdaARN
