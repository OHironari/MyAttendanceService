Parameters:
  MyApiDomainName:
    Type: String
    Description: Please input domain name that you want to alternate api domain name
    Default: api.itononari.xyz

Resources:
  MyApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: MyApiGateway

  MyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref MyApiGateway
      ParentId: !GetAtt MyApiGateway.RootResourceId
      PathPart: submit

  LambdaMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref MyApiGateway
      ResourceId: !Ref MyResource
      HttpMethod: POST
      AuthorizationType: NONE
      RequestParameters:
        method.request.header.Content-Type: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          !Join
            - ''
            - - !Sub "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/"
              - !ImportValue FunctionARN
              - "/invocations"
        # RequestParameters:
          # integration.request.header.Content-Type: "'application/json'" 
        PassthroughBehavior: WHEN_NO_MATCH
  
  MyDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref MyApiDomainName
      RegionalCertificateArn: !ImportValue ApiDomainarn
      EndpointConfiguration:
        Types:
          - REGIONAL

  MyMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    DependsOn: MyStage
    Properties:
      Stage: myapi
      DomainName: !Ref MyDomainName
      RestApiId: !Ref MyApiGateway

  MyDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: LambdaMethod
    Properties:
      RestApiId: !Ref MyApiGateway

  MyStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: myapi
      RestApiId: !Ref MyApiGateway
      DeploymentId: !Ref MyDeployment
      MethodSettings:
        - LoggingLevel: ERROR
          ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: true
          DataTraceEnabled: true
      AccessLogSetting:
        DestinationArn: !ImportValue APIGatewayLogGroup
        # Format: '{ "requestId":"$context.requestId", "ip":"$context.identity.sourceIp", "userAgent":"$context.identity.userAgent", ... }'
  
  MyAPIGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !ImportValue ApiGatewayToCloudWatchRole


Outputs:
  ApigatewayDomainName:
    Value: !Sub "${MyApiGateway}.execute-api.${AWS::Region}.amazonaws.com"
    Description: This is the Api Gateway Domain Name
    Export:
      Name: ApigatewayDomainName
  StageName:
    Value: !Ref MyStage
    Description: This is the Api Gateway stage name
    Export: 
      Name: StageName


